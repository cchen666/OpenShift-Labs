---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-openshift
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-openshift
  template:
    metadata:
      labels:
        app: hello-openshift
    spec:
      containers:
      - name: hello-openshift
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo The app is running! && sleep 3600000']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
      - name: httpd
        image: registry.access.redhat.com/ubi8/ubi
        command: ["sh", "-c", "echo 'The app is running' > /var/www/html/index.html; httpd -f -p 8080 -h /var/www/html"]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ping-test
  template:
    metadata:
      labels:
        app: ping-test
      annotations:
    spec:
      containers:
      - name: pingtest
        image: quay.io/ykashtan/ubi8-ip:latest
        command: ["/bin/sh"]
        args: ["-c", "while true; do sleep 10000000;done"]
        securityContext:
          capabilities:
            add: ["NET_RAW", "NET_ADMIN"]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: openshift-flask
    app.kubernetes.io/component: openshift-flask
    app.kubernetes.io/instance: openshift-flask
  name: openshift-flask
  namespace: test-helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: openshift-flask
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: openshift-flask
    spec:
      containers:
      - image: quay.io/cchenlp/helloworld:1.0
        imagePullPolicy: IfNotPresent
        name: openshift-flask
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-openshift
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-openshift
  template:
    metadata:
      labels:
        app: hello-openshift
    spec:
      containers:
      - name: hello-openshift-1
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo The app is running! && sleep 3600000']
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: task-pv-storage-1
      - name: hello-openshift-2
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo The app is running! && sleep 3600000']
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: task-pv-storage-2
      initContainers:
      - name: config-init-1
        image: busybox:1.28
        command: ['sh', '-c', 'echo init-1 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-2
        image: busybox:1.28
        command: ['sh', '-c', 'echo init-2 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-3
        image: busybox:1.28
        command: ['sh', '-c', 'echo init-3 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-4
        image: busybox:1.28
        command: ['sh', '-c', 'echo init-4 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      volumes:
      - name: task-pv-storage-1
        persistentVolumeClaim:
          claimName: task-pv-claim-1
      - name: task-pv-storage-2
        persistentVolumeClaim:
          claimName: task-pv-claim-2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-openshift-${i}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-openshift-${i}
  template:
    metadata:
      labels:
        app: hello-openshift-${i}
    spec:
      containers:
      - name: hello-openshift-1
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo The app is running! && sleep 360000000']
      - name: hello-openshift-2
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo The app is running! && sleep 360000000']
      initContainers:
      - name: config-init-1
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo init-1 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-2
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo init-2 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-3
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo init-3 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"
      - name: config-init-4
        image: registry.access.redhat.com/ubi8/ubi
        command: ['sh', '-c', 'echo init-4 && sleep 1']
        resources:
          requests:
            cpu: "10m"
            memory: "50Mi"
          limits:
            cpu: "20m"
            memory: "50Mi"